name: CI

on:
  push:
    tags:
      - "v*"
    branches:
      - "*"
      - "!main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Bundle
        run: npm run bundle

      - name: Upload bundle artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: bundle
          path: bundle.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4

      - name: Download bundle artifact
        uses: actions/download-artifact@v4
        with:
          name: bundle

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: bundle.tar.gz
          draft: false
          prerelease: false

      - name: Remove bundle file
        run: rm -f bundle.tar.gz

      - name: Build versions.json
        run: |
          gh api repos/${{ github.repository }}/releases --paginate | jq '
            map(select(.draft == false and .prerelease == false)) |
            map({
              version: (.tag_name | sub("^v"; "")),
              artifactUrl: (.assets[] | select(.name == "bundle.tar.gz") | .browser_download_url),
              artifactChecksum: (.assets[] | select(.name == "bundle.tar.gz") | .digest)
            }) |
            {versions: .}
          ' > versions.new.json
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Push versions.json to main
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch origin main
          git checkout main
          mv versions.new.json versions.json
          git add versions.json
          git commit -m "Update versions.json with release ${{ github.ref_name }}" || exit 0
          git push origin main
